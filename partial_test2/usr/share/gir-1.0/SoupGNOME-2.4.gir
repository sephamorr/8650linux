<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Soup" version="2.4"/>
  <package name="libsoup-gnome-2.4"/>
  <c:include name="libsoup/soup-gnome.h"/>
  <namespace name="SoupGNOME"
             version="2.4"
             shared-library="libsoup-gnome-2.4.so.1,libsoup-2.4.so.1"
             c:identifier-prefixes="Soup"
             c:symbol-prefixes="soup">
    <constant name="COOKIE_JAR_SQLITE_FILENAME"
              value="filename"
              c:type="SOUP_COOKIE_JAR_SQLITE_FILENAME">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="COOKIE_JAR_SQLITE_H"
              value="1"
              c:type="SOUP_COOKIE_JAR_SQLITE_H">
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="CookieJarSqlite"
           c:symbol-prefix="cookie_jar_sqlite"
           c:type="SoupCookieJarSqlite"
           parent="Soup.CookieJar"
           glib:type-name="SoupCookieJarSqlite"
           glib:get-type="soup_cookie_jar_sqlite_get_type"
           glib:type-struct="CookieJarSqliteClass">
      <implements name="Soup.SessionFeature"/>
      <constructor name="new"
                   c:identifier="soup_cookie_jar_sqlite_new"
                   version="2.26">
        <doc xml:whitespace="preserve">Creates a #SoupCookieJarSqlite.

@filename will be read in at startup to create an initial set of
cookies. If @read_only is %FALSE, then the non-session cookies will
be written to @filename when the 'changed' signal is emitted from
the jar. (If @read_only is %TRUE, then the cookie jar will only be
used for this session, and changes made to it will be lost when the
jar is destroyed.)</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the new #SoupCookieJar</doc>
          <type name="Soup.CookieJar" c:type="SoupCookieJar*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:whitespace="preserve">the filename to read to/write from, or %NULL</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="read_only" transfer-ownership="none">
            <doc xml:whitespace="preserve">%TRUE if @filename is read-only</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="filename"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <field name="parent">
        <type name="Soup.CookieJar" c:type="SoupCookieJar"/>
      </field>
    </class>
    <record name="CookieJarSqliteClass"
            c:type="SoupCookieJarSqliteClass"
            glib:is-gtype-struct-for="CookieJarSqlite">
      <field name="parent_class">
        <type name="Soup.CookieJarClass" c:type="SoupCookieJarClass"/>
      </field>
      <field name="_libsoup_reserved1" introspectable="0">
        <callback name="_libsoup_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_libsoup_reserved2" introspectable="0">
        <callback name="_libsoup_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_libsoup_reserved3" introspectable="0">
        <callback name="_libsoup_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_libsoup_reserved4" introspectable="0">
        <callback name="_libsoup_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <constant name="GNOME_FEATURES_H" value="1" c:type="SOUP_GNOME_FEATURES_H">
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="ProxyResolverGNOME"
           c:symbol-prefix="proxy_resolver_gnome"
           parent="Soup.ProxyResolverDefault"
           glib:type-name="SoupProxyResolverGNOME"
           glib:get-type="soup_proxy_resolver_gnome_get_type">
      <implements name="Soup.ProxyURIResolver"/>
      <implements name="Soup.SessionFeature"/>
    </class>
    <function name="gnome_features_2_26_get_type"
              c:identifier="soup_gnome_features_2_26_get_type">
      <return-value transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </return-value>
    </function>
  </namespace>
</repository>
